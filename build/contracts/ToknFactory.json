{
  "contractName": "ToknFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_deployer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_songID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_artist",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_albumCoverHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_audioHash",
          "type": "string"
        }
      ],
      "name": "SongUploaded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "artistTokn",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "songList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_songID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_artist",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_albumCoverHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_audioHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_albumCoverHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_audioHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        }
      ],
      "name": "uploadSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_songID",
          "type": "uint256"
        }
      ],
      "name": "createTokn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_deployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_songID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_artist\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_albumCoverHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_audioHash\",\"type\":\"string\"}],\"name\":\"SongUploaded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"artistTokn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_songID\",\"type\":\"uint256\"}],\"name\":\"createTokn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"songList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_songID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_artist\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_albumCoverHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_audioHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_albumCoverHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_audioHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"}],\"name\":\"uploadSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknFactory.sol\":\"ToknFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/Auction.sol\":{\"keccak256\":\"0x67d7752e1ec58a7331383399caccef09ff24530bb556c327b8857b888fe065fb\",\"urls\":[\"bzz-raw://1a54c2c5ce7dc2461b5e66b9a87075791da5f7e0e2bcce3ec8d89274625ced2b\",\"dweb:/ipfs/QmWLnQZ5BKvCZc9RWh5UBFAJ81tLUNFb4buj31nCYZVUYm\"]},\"/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknBidding.sol\":{\"keccak256\":\"0x50d0df40f50920abdf28f171626f5de2c30cbcd0578a33ed5f4f6ccd135a7694\",\"urls\":[\"bzz-raw://7d103958482274edaf2902c5bcc6056996ebfaa17d86c015d87a48ce6ae3aa76\",\"dweb:/ipfs/QmTMCbLpynjfVQCu3QHPoVM1YEvzvCxSjGLimkDGfhUzDM\"]},\"/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknCollectible.sol\":{\"keccak256\":\"0x9b6c31c4d5fb472172a196fd16c3dc6913170ac333e94156fade4fc182a0299f\",\"urls\":[\"bzz-raw://a35025bd3ddb1594b610896437bdce8b409c647b5328de2c9652c43ae1f4b84f\",\"dweb:/ipfs/QmSJ5eL3FgvwAN7WcGnCD3oX6FRs6kqkyBpoSSsf5AiaMu\"]},\"/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknFactory.sol\":{\"keccak256\":\"0x277f6ac3bec225dd73fe95da38a691f414af6df43c749a10ec40d0d9fa9b235e\",\"urls\":[\"bzz-raw://b2a23f7a24e96e22642bd0943929cd13a5c45ea5b5a8afd7bda52bab3b5d4def\",\"dweb:/ipfs/QmaZtpa5veKVdpHYeSCKhdXfd8G3ugjbE9t9c8AVkPHrYg\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd644260d8e4e64563a7adba96d774dbaac6ae89c2ee58ef49a19850ff1239b08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81a0c489456fafb7633712e4da200de197b5ddf5c1b7932820db852f0ff16c59\",\"dweb:/ipfs/QmQrBxoR7gSSK9ShqunCUwXf57w19xN7DN4fgZe89sWTNw\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:861:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:88:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "88:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "103:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "97:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "88:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "154:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "119:34:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "119:41:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "119:41:13"
                }
              ]
            },
            "name": "abi_decode_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "56:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "64:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "72:5:13",
                "type": ""
              }
            ],
            "src": "7:159:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "257:215:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "303:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "312:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "315:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "305:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "305:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "305:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "278:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "287:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "299:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "270:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "270:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "267:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "329:136:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "344:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "358:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "348:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "373:82:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "427:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "438:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "423:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "423:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "447:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "383:39:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "383:72:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "373:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "227:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "238:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "250:6:13",
                "type": ""
              }
            ],
            "src": "172:300:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "541:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "570:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "552:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "552:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "541:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "513:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "523:7:13",
                "type": ""
              }
            ],
            "src": "478:104:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "658:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "665:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "654:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:13",
                "type": ""
              }
            ],
            "src": "588:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:87:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "836:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "845:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "848:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "838:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "838:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "838:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "794:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "827:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "801:25:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "801:32:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "791:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:43:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "784:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:51:13"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:13"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "764:5:13",
                "type": ""
              }
            ],
            "src": "720:138:13"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8647:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:13"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:13"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:13"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:13"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:13"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:13"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:13"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:13"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:13",
                "type": ""
              }
            ],
            "src": "7:344:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:13"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:13",
                "type": ""
              }
            ],
            "src": "357:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "578:211:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "629:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "629:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "614:4:13",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:17:13"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "621:3:13"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "598:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:27:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:35:13"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "652:34:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "679:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "666:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:20:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "656:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:88:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "756:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "764:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:17:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "771:6:13"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "779:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "704:47:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:79:13"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "695:5:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "556:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "564:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "572:5:13",
                "type": ""
              }
            ],
            "src": "516:273:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "847:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "857:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "879:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "866:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "857:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "922:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "895:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "895:33:13"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "825:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "833:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "841:5:13",
                "type": ""
              }
            ],
            "src": "795:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1006:196:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1052:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1061:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1064:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1054:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1027:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1036:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1019:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1016:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1157:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1168:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1153:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1153:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1177:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1132:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "976:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "987:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "999:6:13",
                "type": ""
              }
            ],
            "src": "940:262:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1338:761:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1384:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1393:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1396:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1386:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1386:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1386:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1359:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1368:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1355:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1355:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1380:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1351:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1348:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1410:220:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1425:45:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1456:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1467:1:13",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1452:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1452:17:13"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1439:12:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1439:31:13"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1429:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1517:16:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1526:1:13",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1529:1:13",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1519:6:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1519:12:13"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1519:12:13"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1489:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1497:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1486:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1486:30:13"
                      },
                      "nodeType": "YulIf",
                      "src": "1483:2:13"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1547:73:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1592:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1603:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1588:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1588:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1612:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1557:30:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1557:63:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1547:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1640:221:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1655:46:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1686:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1697:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1682:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1682:18:13"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1669:12:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:32:13"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1659:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1748:16:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1757:1:13",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1760:1:13",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1750:6:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1750:12:13"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1750:12:13"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1720:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1728:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1717:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1717:30:13"
                      },
                      "nodeType": "YulIf",
                      "src": "1714:2:13"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1778:73:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1823:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1834:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1819:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1819:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1843:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1788:30:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1788:63:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1778:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1871:221:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1886:46:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1917:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1928:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1913:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1913:18:13"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1900:12:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:32:13"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1890:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1979:16:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1988:1:13",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1991:1:13",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1981:6:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1981:12:13"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1981:12:13"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1951:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1959:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1948:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1948:30:13"
                      },
                      "nodeType": "YulIf",
                      "src": "1945:2:13"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2009:73:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2054:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2065:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2050:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2050:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2074:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2019:30:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2019:63:13"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2009:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1292:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1303:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1315:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1323:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1331:6:13",
                "type": ""
              }
            ],
            "src": "1208:891:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2225:658:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2271:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2280:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2283:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2273:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2273:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2273:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2246:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2255:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2242:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2242:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2267:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2238:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2238:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2235:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2297:220:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2312:45:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2343:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2354:1:13",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2339:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2339:17:13"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2326:12:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2326:31:13"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2316:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2404:16:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2413:1:13",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2416:1:13",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2406:6:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2406:12:13"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2406:12:13"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2376:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2384:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2373:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2373:30:13"
                      },
                      "nodeType": "YulIf",
                      "src": "2370:2:13"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2434:73:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2479:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2490:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2475:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2475:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2499:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2444:30:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2444:63:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2434:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2527:221:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2542:46:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2573:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2584:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2569:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2569:18:13"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2556:12:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2556:32:13"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2546:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2635:16:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2644:1:13",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2647:1:13",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2637:6:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2637:12:13"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2637:12:13"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2607:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2615:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2604:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2604:30:13"
                      },
                      "nodeType": "YulIf",
                      "src": "2601:2:13"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2665:73:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2710:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2721:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2706:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2706:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2730:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2675:30:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2675:63:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2665:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2758:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2773:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2787:2:13",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2777:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2803:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2838:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2849:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2834:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2834:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2858:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2813:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2813:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2803:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2179:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2190:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2202:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2210:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2218:6:13",
                "type": ""
              }
            ],
            "src": "2105:778:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2955:196:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3001:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3010:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3013:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3003:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3003:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3003:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2976:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2985:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2972:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2972:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2997:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2968:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2968:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2965:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3027:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3042:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3056:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3046:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3071:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3106:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3117:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3102:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3102:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3126:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3081:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3081:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3071:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2925:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2936:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2948:6:13",
                "type": ""
              }
            ],
            "src": "2889:262:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3222:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3239:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3262:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3244:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3232:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3232:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3210:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3217:3:13",
                "type": ""
              }
            ],
            "src": "3157:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3373:272:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3383:53:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3430:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3397:32:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3397:39:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3387:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3445:78:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3511:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3516:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3452:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3452:71:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3445:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3558:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3565:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3554:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3554:16:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3572:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3577:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3532:21:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:52:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3532:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3593:46:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3604:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3631:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3609:21:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3609:29:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3600:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3600:39:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3593:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3354:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3361:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3369:3:13",
                "type": ""
              }
            ],
            "src": "3281:364:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3716:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3733:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3756:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3738:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3738:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3726:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3726:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3726:37:13"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3704:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3711:3:13",
                "type": ""
              }
            ],
            "src": "3651:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3873:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3883:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3895:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3906:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3891:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3891:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3883:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3963:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3976:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3987:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3972:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3972:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3919:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3919:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3919:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3845:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3857:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3868:4:13",
                "type": ""
              }
            ],
            "src": "3775:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4169:348:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4179:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4191:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4202:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4187:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4187:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4179:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4226:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4237:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4222:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4245:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4251:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4241:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4241:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4215:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4215:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4215:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4271:86:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4343:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4352:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4279:63:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4279:78:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4271:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4378:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4389:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4374:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4374:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4398:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4404:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4394:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4394:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4367:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4367:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4367:48:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4424:86:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4496:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4505:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4432:63:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4432:78:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4424:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4133:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4145:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4153:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4164:4:13",
                "type": ""
              }
            ],
            "src": "4003:514:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4793:667:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4803:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4815:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4826:3:13",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4811:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4811:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4803:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4884:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4897:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4908:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4893:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4893:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4840:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4840:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4840:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4932:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4943:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4928:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4928:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4952:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4958:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4948:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4948:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4921:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4921:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4921:48:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4978:86:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5050:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5059:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4986:63:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4986:78:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4978:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5118:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5131:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5142:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5127:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5127:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5074:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5074:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5074:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5167:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5178:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5163:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5163:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5187:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5193:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5183:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5183:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5156:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5156:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5156:48:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5213:86:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5285:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5294:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5221:63:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5221:78:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5213:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5320:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5331:3:13",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5316:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5316:19:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5341:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5347:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5337:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5337:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5309:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5309:49:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5309:49:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5367:86:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5439:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5448:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5375:63:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:78:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5367:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4733:9:13",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4745:6:13",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4753:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4761:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4769:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4777:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4788:4:13",
                "type": ""
              }
            ],
            "src": "4523:937:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5506:243:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5516:19:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5532:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5526:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5526:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5516:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5544:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5566:6:13"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5574:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5562:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5562:17:13"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5548:10:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5690:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5692:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5692:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5692:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5633:10:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5645:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5630:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5630:34:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5669:10:13"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5681:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5666:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5666:22:13"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5627:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5627:62:13"
                  },
                  "nodeType": "YulIf",
                  "src": "5624:2:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5728:2:13",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5732:10:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5721:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5721:22:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5721:22:13"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5490:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5499:6:13",
                "type": ""
              }
            ],
            "src": "5466:283:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5822:265:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5927:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5929:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5929:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5929:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5899:6:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5907:18:13",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5896:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:30:13"
                  },
                  "nodeType": "YulIf",
                  "src": "5893:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5979:41:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5995:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6003:4:13",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5991:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5991:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6014:4:13",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6010:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6010:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5987:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5987:33:13"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5979:4:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6057:23:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6069:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6075:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6065:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6065:15:13"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6057:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5806:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5817:4:13",
                "type": ""
              }
            ],
            "src": "5755:332:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6152:40:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6163:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6179:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6173:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6173:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6163:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6135:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6145:6:13",
                "type": ""
              }
            ],
            "src": "6093:99:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6294:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6311:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6316:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6304:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6304:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6304:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6332:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6351:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6356:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6347:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6332:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6266:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6271:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6282:11:13",
                "type": ""
              }
            ],
            "src": "6198:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6418:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6428:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6457:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6439:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6439:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6428:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6400:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6410:7:13",
                "type": ""
              }
            ],
            "src": "6373:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6520:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6530:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6545:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6552:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6541:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6541:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6530:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6502:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6512:7:13",
                "type": ""
              }
            ],
            "src": "6475:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6652:32:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6662:16:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6673:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6662:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6634:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6644:7:13",
                "type": ""
              }
            ],
            "src": "6607:77:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6741:103:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6764:3:13"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6769:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6774:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6751:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6751:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6751:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6822:3:13"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6827:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6818:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6818:16:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6836:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6811:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6811:27:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6811:27:13"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6723:3:13",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6728:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6733:6:13",
                "type": ""
              }
            ],
            "src": "6690:154:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6899:258:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6909:10:13",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6918:1:13",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6913:1:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6978:63:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7003:3:13"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7008:1:13"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6999:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6999:11:13"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7022:3:13"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7027:1:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7018:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7018:11:13"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7012:5:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7012:18:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6992:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6992:39:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6992:39:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6939:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6942:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6936:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6936:13:13"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6950:19:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6952:15:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6961:1:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6964:2:13",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6957:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6957:10:13"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6952:1:13"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6932:3:13",
                    "statements": []
                  },
                  "src": "6928:113:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7075:76:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7125:3:13"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7130:6:13"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7121:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7121:16:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7139:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7114:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7114:27:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7114:27:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7056:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7059:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7053:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7053:13:13"
                  },
                  "nodeType": "YulIf",
                  "src": "7050:2:13"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6881:3:13",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6886:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6891:6:13",
                "type": ""
              }
            ],
            "src": "6850:307:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7214:269:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7224:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7238:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7244:1:13",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7234:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7234:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7224:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7255:38:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7285:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7291:1:13",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7281:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7281:12:13"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7259:18:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7332:51:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7346:27:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7360:6:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7368:4:13",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7356:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7356:17:13"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7346:6:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7312:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7305:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7305:26:13"
                  },
                  "nodeType": "YulIf",
                  "src": "7302:2:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7435:42:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "7449:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7449:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7449:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7399:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7422:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7430:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7419:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7419:14:13"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7396:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7396:38:13"
                  },
                  "nodeType": "YulIf",
                  "src": "7393:2:13"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7198:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7207:6:13",
                "type": ""
              }
            ],
            "src": "7163:320:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7532:190:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7542:33:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7569:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7551:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7551:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7542:5:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7665:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7667:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7667:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7667:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7590:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7597:66:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7587:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7587:77:13"
                  },
                  "nodeType": "YulIf",
                  "src": "7584:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7696:20:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7707:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7714:1:13",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7703:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7703:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7696:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7518:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7528:3:13",
                "type": ""
              }
            ],
            "src": "7489:233:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7756:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7773:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7776:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7766:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7766:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7766:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7870:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7873:4:13",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7863:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7863:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7863:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7894:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7897:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7887:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7887:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7887:15:13"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7728:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7942:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7959:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7962:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7952:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7952:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7952:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8056:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8059:4:13",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8049:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8049:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8049:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8080:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8083:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8073:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8073:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8073:15:13"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "7914:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8128:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8145:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8148:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8138:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8138:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8138:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8242:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8245:4:13",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8235:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8235:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8235:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8266:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8269:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8259:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8259:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8259:15:13"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8100:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8334:54:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8344:38:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8362:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8369:2:13",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8358:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8358:14:13"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8378:2:13",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8374:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8374:7:13"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8354:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8354:28:13"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "8344:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8317:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "8327:6:13",
                "type": ""
              }
            ],
            "src": "8286:102:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8437:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8494:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8503:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8506:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8496:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8496:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8496:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8460:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8485:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8467:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8467:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8457:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8457:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8450:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8450:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "8447:2:13"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8430:5:13",
                "type": ""
              }
            ],
            "src": "8394:122:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8565:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8622:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8631:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8634:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8624:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8624:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8624:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8588:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8613:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8595:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8595:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8585:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8585:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8578:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8578:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "8575:2:13"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8558:5:13",
                "type": ""
              }
            ],
            "src": "8522:122:13"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "56:1735:3:-:0;;;571:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;632:9;621:8;;:20;;;;;;;;;;;;;;;;;;655:1;646:6;:10;;;;571:89;56:1735;;7:159:13;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o;56:1735:3:-;;;;;;;",
  "deployedSourceMap": "56:1735:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:667;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;165:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;208:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1424:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;710:667;894:1;868:15;862:29;:33;854:42;;;;;;971:1;950:10;944:24;:28;936:37;;;;;;1062:1;1040:24;;:10;:24;;;;1032:33;;;;;;1092:6;;:8;;;;;;;;;:::i;:::-;;;;;;1169:61;;;;;;;;1174:6;;1169:61;;;;1182:6;1169:61;;;;1190:10;1169:61;;;;;;1202:15;1169:61;;;;1219:10;1169:61;;;1150:8;:16;1159:6;;1150:16;;;;;;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1300:71;1313:6;;:8;;;;;;;;;:::i;:::-;;;;;1323:6;1331:10;1343:15;1360:10;1300:71;;;;;;;;;;:::i;:::-;;;;;;;;710:667;;;:::o;165:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;208:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1424:362::-;1536:8;:17;1545:7;1536:17;;;;;;;;;;;:25;;;;;;;;;;;;1522:39;;:10;:39;;;1514:48;;;;;;1567:15;1609:4;1615:6;1593:29;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1567:56;;1775:7;1750:10;:22;1761:10;1750:22;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1424:362;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:344:13:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;516:273::-;;621:3;614:4;606:6;602:17;598:27;588:2;;639:1;636;629:12;588:2;679:6;666:20;704:79;779:3;771:6;764:4;756:6;752:17;704:79;:::i;:::-;695:88;;578:211;;;;;:::o;795:139::-;;879:6;866:20;857:29;;895:33;922:5;895:33;:::i;:::-;847:87;;;;:::o;940:262::-;;1048:2;1036:9;1027:7;1023:23;1019:32;1016:2;;;1064:1;1061;1054:12;1016:2;1107:1;1132:53;1177:7;1168:6;1157:9;1153:22;1132:53;:::i;:::-;1122:63;;1078:117;1006:196;;;;:::o;1208:891::-;;;;1380:2;1368:9;1359:7;1355:23;1351:32;1348:2;;;1396:1;1393;1386:12;1348:2;1467:1;1456:9;1452:17;1439:31;1497:18;1489:6;1486:30;1483:2;;;1529:1;1526;1519:12;1483:2;1557:63;1612:7;1603:6;1592:9;1588:22;1557:63;:::i;:::-;1547:73;;1410:220;1697:2;1686:9;1682:18;1669:32;1728:18;1720:6;1717:30;1714:2;;;1760:1;1757;1750:12;1714:2;1788:63;1843:7;1834:6;1823:9;1819:22;1788:63;:::i;:::-;1778:73;;1640:221;1928:2;1917:9;1913:18;1900:32;1959:18;1951:6;1948:30;1945:2;;;1991:1;1988;1981:12;1945:2;2019:63;2074:7;2065:6;2054:9;2050:22;2019:63;:::i;:::-;2009:73;;1871:221;1338:761;;;;;:::o;2105:778::-;;;;2267:2;2255:9;2246:7;2242:23;2238:32;2235:2;;;2283:1;2280;2273:12;2235:2;2354:1;2343:9;2339:17;2326:31;2384:18;2376:6;2373:30;2370:2;;;2416:1;2413;2406:12;2370:2;2444:63;2499:7;2490:6;2479:9;2475:22;2444:63;:::i;:::-;2434:73;;2297:220;2584:2;2573:9;2569:18;2556:32;2615:18;2607:6;2604:30;2601:2;;;2647:1;2644;2637:12;2601:2;2675:63;2730:7;2721:6;2710:9;2706:22;2675:63;:::i;:::-;2665:73;;2527:221;2787:2;2813:53;2858:7;2849:6;2838:9;2834:22;2813:53;:::i;:::-;2803:63;;2758:118;2225:658;;;;;:::o;2889:262::-;;2997:2;2985:9;2976:7;2972:23;2968:32;2965:2;;;3013:1;3010;3003:12;2965:2;3056:1;3081:53;3126:7;3117:6;3106:9;3102:22;3081:53;:::i;:::-;3071:63;;3027:117;2955:196;;;;:::o;3157:118::-;3244:24;3262:5;3244:24;:::i;:::-;3239:3;3232:37;3222:53;;:::o;3281:364::-;;3397:39;3430:5;3397:39;:::i;:::-;3452:71;3516:6;3511:3;3452:71;:::i;:::-;3445:78;;3532:52;3577:6;3572:3;3565:4;3558:5;3554:16;3532:52;:::i;:::-;3609:29;3631:6;3609:29;:::i;:::-;3604:3;3600:39;3593:46;;3373:272;;;;;:::o;3651:118::-;3738:24;3756:5;3738:24;:::i;:::-;3733:3;3726:37;3716:53;;:::o;3775:222::-;;3906:2;3895:9;3891:18;3883:26;;3919:71;3987:1;3976:9;3972:17;3963:6;3919:71;:::i;:::-;3873:124;;;;:::o;4003:514::-;;4202:2;4191:9;4187:18;4179:26;;4251:9;4245:4;4241:20;4237:1;4226:9;4222:17;4215:47;4279:78;4352:4;4343:6;4279:78;:::i;:::-;4271:86;;4404:9;4398:4;4394:20;4389:2;4378:9;4374:18;4367:48;4432:78;4505:4;4496:6;4432:78;:::i;:::-;4424:86;;4169:348;;;;;:::o;4523:937::-;;4826:3;4815:9;4811:19;4803:27;;4840:71;4908:1;4897:9;4893:17;4884:6;4840:71;:::i;:::-;4958:9;4952:4;4948:20;4943:2;4932:9;4928:18;4921:48;4986:78;5059:4;5050:6;4986:78;:::i;:::-;4978:86;;5074:72;5142:2;5131:9;5127:18;5118:6;5074:72;:::i;:::-;5193:9;5187:4;5183:20;5178:2;5167:9;5163:18;5156:48;5221:78;5294:4;5285:6;5221:78;:::i;:::-;5213:86;;5347:9;5341:4;5337:20;5331:3;5320:9;5316:19;5309:49;5375:78;5448:4;5439:6;5375:78;:::i;:::-;5367:86;;4793:667;;;;;;;;:::o;5466:283::-;;5532:2;5526:9;5516:19;;5574:4;5566:6;5562:17;5681:6;5669:10;5666:22;5645:18;5633:10;5630:34;5627:62;5624:2;;;5692:18;;:::i;:::-;5624:2;5732:10;5728:2;5721:22;5506:243;;;;:::o;5755:332::-;;5907:18;5899:6;5896:30;5893:2;;;5929:18;;:::i;:::-;5893:2;6014:4;6010:9;6003:4;5995:6;5991:17;5987:33;5979:41;;6075:4;6069;6065:15;6057:23;;5822:265;;;:::o;6093:99::-;;6179:5;6173:12;6163:22;;6152:40;;;:::o;6198:169::-;;6316:6;6311:3;6304:19;6356:4;6351:3;6347:14;6332:29;;6294:73;;;;:::o;6373:96::-;;6439:24;6457:5;6439:24;:::i;:::-;6428:35;;6418:51;;;:::o;6475:126::-;;6552:42;6545:5;6541:54;6530:65;;6520:81;;;:::o;6607:77::-;;6673:5;6662:16;;6652:32;;;:::o;6690:154::-;6774:6;6769:3;6764;6751:30;6836:1;6827:6;6822:3;6818:16;6811:27;6741:103;;;:::o;6850:307::-;6918:1;6928:113;6942:6;6939:1;6936:13;6928:113;;;7027:1;7022:3;7018:11;7012:18;7008:1;7003:3;6999:11;6992:39;6964:2;6961:1;6957:10;6952:15;;6928:113;;;7059:6;7056:1;7053:13;7050:2;;;7139:1;7130:6;7125:3;7121:16;7114:27;7050:2;6899:258;;;;:::o;7163:320::-;;7244:1;7238:4;7234:12;7224:22;;7291:1;7285:4;7281:12;7312:18;7302:2;;7368:4;7360:6;7356:17;7346:27;;7302:2;7430;7422:6;7419:14;7399:18;7396:38;7393:2;;;7449:18;;:::i;:::-;7393:2;7214:269;;;;:::o;7489:233::-;;7551:24;7569:5;7551:24;:::i;:::-;7542:33;;7597:66;7590:5;7587:77;7584:2;;;7667:18;;:::i;:::-;7584:2;7714:1;7707:5;7703:13;7696:20;;7532:190;;;:::o;7728:180::-;7776:77;7773:1;7766:88;7873:4;7870:1;7863:15;7897:4;7894:1;7887:15;7914:180;7962:77;7959:1;7952:88;8059:4;8056:1;8049:15;8083:4;8080:1;8073:15;8100:180;8148:77;8145:1;8138:88;8245:4;8242:1;8235:15;8269:4;8266:1;8259:15;8286:102;;8378:2;8374:7;8369:2;8362:5;8358:14;8354:28;8344:38;;8334:54;;;:::o;8394:122::-;8467:24;8485:5;8467:24;:::i;:::-;8460:5;8457:35;8447:2;;8506:1;8503;8496:12;8447:2;8437:79;:::o;8522:122::-;8595:24;8613:5;8595:24;:::i;:::-;8588:5;8585:35;8575:2;;8634:1;8631;8624:12;8575:2;8565:79;:::o",
  "source": "pragma solidity ^0.8.0;\r\nimport './ToknBidding.sol';\r\n\r\ncontract ToknFactory{\r\n  address payable deployer;\r\n  uint256 songID;\r\n  // address artist;\r\n//store songs\r\n mapping(uint256=> Song) public songList;\r\n mapping(address=> address) public artistTokn;\r\n\r\n//model song object\r\nstruct Song{\r\n uint256 _songID;\r\n string _title;\r\n address _artist;\r\n string _albumCoverHash;\r\n string _audioHash;\r\n }\r\n\r\n //Song uploaded EventEmitter\r\n event SongUploaded(\r\n   uint256 _songID,\r\n   string _title,\r\n   address _artist,\r\n   string _albumCoverHash,\r\n   string _audioHash\r\n );\r\n\r\nconstructor(address payable _deployer) public{\r\n  deployer = _deployer;\r\n  songID = 0;\r\n}\r\n\r\n\r\n\r\n//upload or store song on the blockchain\r\nfunction uploadSong(string memory _albumCoverHash, string memory _audioHash, string memory _title) public {\r\n  //ensure imgHash is not empty\r\n  require(bytes(_albumCoverHash).length > 0);\r\n  //ensure auidoHash is not empty\r\n  require(bytes(_audioHash).length > 0);\r\n  //ensure function caller(an artist) has an address\r\n  require(msg.sender != address(0));\r\n  //increment songID\r\n  songID++;\r\n  //create and store song object to mapping\r\n  songList[songID] = Song(songID, _title, msg.sender, _albumCoverHash, _audioHash);  \r\n  //emit event after song has been uploaded successfully\r\n  emit SongUploaded(songID++, _title, msg.sender, _albumCoverHash, _audioHash);\r\n\r\n}\r\n\r\n// Creating an NFT of the song uploaded\r\n\r\nfunction createTokn(string memory name, string memory symbol, uint256 _songID) public{\r\n  require(msg.sender == songList[_songID]._artist);\r\n  address newTokn = address(new ToknBidding(name, symbol));\r\n  // ToknCollectible.Collectible memory newCollectible = newTokn.create(songList[_songID]._title, tokenURI, commission);\r\n  artistTokn[msg.sender] = newTokn;\r\n}\r\n\r\n}",
  "sourcePath": "C:/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknFactory.sol",
  "ast": {
    "absolutePath": "/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknFactory.sol",
    "exportedSymbols": {
      "Address": [
        2152
      ],
      "Auction": [
        218
      ],
      "Context": [
        2173
      ],
      "ERC165": [
        2400
      ],
      "ERC721": [
        1695
      ],
      "IERC165": [
        2412
      ],
      "IERC721": [
        1811
      ],
      "IERC721Metadata": [
        1856
      ],
      "IERC721Receiver": [
        1829
      ],
      "Strings": [
        2376
      ],
      "ToknBidding": [
        568
      ],
      "ToknCollectible": [
        718
      ],
      "ToknFactory": [
        877
      ]
    },
    "id": 878,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 720,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknBidding.sol",
        "file": "./ToknBidding.sol",
        "id": 721,
        "nodeType": "ImportDirective",
        "scope": 878,
        "sourceUnit": 569,
        "src": "25:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          568
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 877,
        "linearizedBaseContracts": [
          877
        ],
        "name": "ToknFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 723,
            "mutability": "mutable",
            "name": "deployer",
            "nodeType": "VariableDeclaration",
            "scope": 877,
            "src": "81:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 722,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "81:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 725,
            "mutability": "mutable",
            "name": "songID",
            "nodeType": "VariableDeclaration",
            "scope": 877,
            "src": "110:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 724,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "110:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "3a562377",
            "id": 730,
            "mutability": "mutable",
            "name": "songList",
            "nodeType": "VariableDeclaration",
            "scope": 877,
            "src": "165:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$745_storage_$",
              "typeString": "mapping(uint256 => struct ToknFactory.Song)"
            },
            "typeName": {
              "id": 729,
              "keyType": {
                "id": 726,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "173:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "165:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$745_storage_$",
                "typeString": "mapping(uint256 => struct ToknFactory.Song)"
              },
              "valueType": {
                "id": 728,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 727,
                  "name": "Song",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 745,
                  "src": "183:4:3"
                },
                "referencedDeclaration": 745,
                "src": "183:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Song_$745_storage_ptr",
                  "typeString": "struct ToknFactory.Song"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "538241eb",
            "id": 734,
            "mutability": "mutable",
            "name": "artistTokn",
            "nodeType": "VariableDeclaration",
            "scope": 877,
            "src": "208:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 733,
              "keyType": {
                "id": 731,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "216:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "208:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 732,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "226:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ToknFactory.Song",
            "id": 745,
            "members": [
              {
                "constant": false,
                "id": 736,
                "mutability": "mutable",
                "name": "_songID",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "293:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 735,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 738,
                "mutability": "mutable",
                "name": "_title",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "312:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 737,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "312:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 740,
                "mutability": "mutable",
                "name": "_artist",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "329:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 739,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "329:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 742,
                "mutability": "mutable",
                "name": "_albumCoverHash",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "348:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 741,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "348:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 744,
                "mutability": "mutable",
                "name": "_audioHash",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "374:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 743,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "374:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Song",
            "nodeType": "StructDefinition",
            "scope": 877,
            "src": "278:118:3",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 757,
            "name": "SongUploaded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_songID",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "456:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_title",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "477:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_artist",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "496:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 753,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_albumCoverHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "517:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 755,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_audioHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "545:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "450:116:3"
            },
            "src": "432:135:3"
          },
          {
            "body": {
              "id": 770,
              "nodeType": "Block",
              "src": "616:44:3",
              "statements": [
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "621:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 763,
                      "name": "_deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "632:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "621:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "621:20:3"
                },
                {
                  "expression": {
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 766,
                      "name": "songID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "646:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "655:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "646:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "646:10:3"
                }
              ]
            },
            "id": 771,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "_deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "583:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:27:3"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:0:3"
            },
            "scope": 877,
            "src": "571:89:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "816:561:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 783,
                                "name": "_albumCoverHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "868:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "862:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 781,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "862:5:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "862:22:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "862:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "894:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "862:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "854:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "854:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 793,
                                "name": "_audioHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 775,
                                "src": "950:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "944:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 791,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "944:5:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "944:17:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "944:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "971:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "944:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "936:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "936:37:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 801,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1040:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1040:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1062:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1054:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 803,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1054:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1054:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1040:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1032:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:33:3"
                },
                {
                  "expression": {
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1092:8:3",
                    "subExpression": {
                      "id": 810,
                      "name": "songID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "1092:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:8:3"
                },
                {
                  "expression": {
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 813,
                        "name": "songList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "1150:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$745_storage_$",
                          "typeString": "mapping(uint256 => struct ToknFactory.Song storage ref)"
                        }
                      },
                      "id": 815,
                      "indexExpression": {
                        "id": 814,
                        "name": "songID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "1159:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1150:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$745_storage",
                        "typeString": "struct ToknFactory.Song storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 817,
                          "name": "songID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "1174:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 818,
                          "name": "_title",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "1182:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 819,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1190:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1190:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 821,
                          "name": "_albumCoverHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "1202:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 822,
                          "name": "_audioHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "1219:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 816,
                        "name": "Song",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "1169:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Song_$745_storage_ptr_$",
                          "typeString": "type(struct ToknFactory.Song storage pointer)"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1169:61:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$745_memory_ptr",
                        "typeString": "struct ToknFactory.Song memory"
                      }
                    },
                    "src": "1150:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Song_$745_storage",
                      "typeString": "struct ToknFactory.Song storage ref"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "1150:80:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1313:8:3",
                        "subExpression": {
                          "id": 827,
                          "name": "songID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "1313:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 829,
                        "name": "_title",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "1323:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1331:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1331:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 832,
                        "name": "_albumCoverHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "1343:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 833,
                        "name": "_audioHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "1360:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 826,
                      "name": "SongUploaded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "1300:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,address,string memory,string memory)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1300:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "EmitStatement",
                  "src": "1295:76:3"
                }
              ]
            },
            "functionSelector": "231f9f5e",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uploadSong",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "_albumCoverHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "730:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "_audioHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "761:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "_title",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "787:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "729:79:3"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:0:3"
            },
            "scope": 877,
            "src": "710:667:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "1509:277:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 847,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1522:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1522:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 849,
                              "name": "songList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "1536:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$745_storage_$",
                                "typeString": "mapping(uint256 => struct ToknFactory.Song storage ref)"
                              }
                            },
                            "id": 851,
                            "indexExpression": {
                              "id": 850,
                              "name": "_songID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "1545:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1536:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Song_$745_storage",
                              "typeString": "struct ToknFactory.Song storage ref"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_artist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 740,
                          "src": "1536:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1522:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1514:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:48:3"
                },
                {
                  "assignments": [
                    857
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 857,
                      "mutability": "mutable",
                      "name": "newTokn",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "1567:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 856,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1567:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 867,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 863,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "1609:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 864,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "1615:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1593:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ToknBidding_$568_$",
                            "typeString": "function (string memory,string memory) returns (contract ToknBidding)"
                          },
                          "typeName": {
                            "id": 861,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 860,
                              "name": "ToknBidding",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 568,
                              "src": "1597:11:3"
                            },
                            "referencedDeclaration": 568,
                            "src": "1597:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ToknBidding_$568",
                              "typeString": "contract ToknBidding"
                            }
                          }
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1593:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ToknBidding_$568",
                          "typeString": "contract ToknBidding"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ToknBidding_$568",
                          "typeString": "contract ToknBidding"
                        }
                      ],
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1585:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 858,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1585:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1567:56:3"
                },
                {
                  "expression": {
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 868,
                        "name": "artistTokn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "1750:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 871,
                      "indexExpression": {
                        "expression": {
                          "id": 869,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1761:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1761:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1750:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 872,
                      "name": "newTokn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "1775:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1750:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:32:3"
                }
              ]
            },
            "functionSelector": "92a7dcd8",
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTokn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1444:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1464:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "_songID",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1486:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1443:59:3"
            },
            "returnParameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:3"
            },
            "scope": 877,
            "src": "1424:362:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 878,
        "src": "56:1735:3"
      }
    ],
    "src": "0:1791:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknFactory.sol",
    "exportedSymbols": {
      "Address": [
        2152
      ],
      "Auction": [
        218
      ],
      "Context": [
        2173
      ],
      "ERC165": [
        2400
      ],
      "ERC721": [
        1695
      ],
      "IERC165": [
        2412
      ],
      "IERC721": [
        1811
      ],
      "IERC721Metadata": [
        1856
      ],
      "IERC721Receiver": [
        1829
      ],
      "Strings": [
        2376
      ],
      "ToknBidding": [
        568
      ],
      "ToknCollectible": [
        718
      ],
      "ToknFactory": [
        877
      ]
    },
    "id": 878,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 720,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/C/Users/lenovo/OneDrive/Desktop/projects/Tokn/contracts/ToknBidding.sol",
        "file": "./ToknBidding.sol",
        "id": 721,
        "nodeType": "ImportDirective",
        "scope": 878,
        "sourceUnit": 569,
        "src": "25:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          568
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 877,
        "linearizedBaseContracts": [
          877
        ],
        "name": "ToknFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 723,
            "mutability": "mutable",
            "name": "deployer",
            "nodeType": "VariableDeclaration",
            "scope": 877,
            "src": "81:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 722,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "81:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 725,
            "mutability": "mutable",
            "name": "songID",
            "nodeType": "VariableDeclaration",
            "scope": 877,
            "src": "110:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 724,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "110:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "3a562377",
            "id": 730,
            "mutability": "mutable",
            "name": "songList",
            "nodeType": "VariableDeclaration",
            "scope": 877,
            "src": "165:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$745_storage_$",
              "typeString": "mapping(uint256 => struct ToknFactory.Song)"
            },
            "typeName": {
              "id": 729,
              "keyType": {
                "id": 726,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "173:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "165:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$745_storage_$",
                "typeString": "mapping(uint256 => struct ToknFactory.Song)"
              },
              "valueType": {
                "id": 728,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 727,
                  "name": "Song",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 745,
                  "src": "183:4:3"
                },
                "referencedDeclaration": 745,
                "src": "183:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Song_$745_storage_ptr",
                  "typeString": "struct ToknFactory.Song"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "538241eb",
            "id": 734,
            "mutability": "mutable",
            "name": "artistTokn",
            "nodeType": "VariableDeclaration",
            "scope": 877,
            "src": "208:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 733,
              "keyType": {
                "id": 731,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "216:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "208:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 732,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "226:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ToknFactory.Song",
            "id": 745,
            "members": [
              {
                "constant": false,
                "id": 736,
                "mutability": "mutable",
                "name": "_songID",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "293:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 735,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 738,
                "mutability": "mutable",
                "name": "_title",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "312:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 737,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "312:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 740,
                "mutability": "mutable",
                "name": "_artist",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "329:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 739,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "329:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 742,
                "mutability": "mutable",
                "name": "_albumCoverHash",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "348:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 741,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "348:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 744,
                "mutability": "mutable",
                "name": "_audioHash",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "374:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 743,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "374:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Song",
            "nodeType": "StructDefinition",
            "scope": 877,
            "src": "278:118:3",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 757,
            "name": "SongUploaded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_songID",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "456:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_title",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "477:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_artist",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "496:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 753,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_albumCoverHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "517:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 755,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_audioHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "545:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "450:116:3"
            },
            "src": "432:135:3"
          },
          {
            "body": {
              "id": 770,
              "nodeType": "Block",
              "src": "616:44:3",
              "statements": [
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "621:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 763,
                      "name": "_deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "632:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "621:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "621:20:3"
                },
                {
                  "expression": {
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 766,
                      "name": "songID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "646:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "655:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "646:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "646:10:3"
                }
              ]
            },
            "id": 771,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "_deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "583:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:27:3"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:0:3"
            },
            "scope": 877,
            "src": "571:89:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "816:561:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 783,
                                "name": "_albumCoverHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "868:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "862:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 781,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "862:5:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "862:22:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "862:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "894:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "862:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "854:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "854:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 793,
                                "name": "_audioHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 775,
                                "src": "950:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "944:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 791,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "944:5:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "944:17:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "944:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "971:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "944:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "936:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "936:37:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 801,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1040:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1040:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1062:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1054:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 803,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1054:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1054:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1040:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1032:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:33:3"
                },
                {
                  "expression": {
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1092:8:3",
                    "subExpression": {
                      "id": 810,
                      "name": "songID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "1092:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:8:3"
                },
                {
                  "expression": {
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 813,
                        "name": "songList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "1150:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$745_storage_$",
                          "typeString": "mapping(uint256 => struct ToknFactory.Song storage ref)"
                        }
                      },
                      "id": 815,
                      "indexExpression": {
                        "id": 814,
                        "name": "songID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "1159:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1150:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$745_storage",
                        "typeString": "struct ToknFactory.Song storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 817,
                          "name": "songID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "1174:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 818,
                          "name": "_title",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "1182:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 819,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1190:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1190:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 821,
                          "name": "_albumCoverHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "1202:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 822,
                          "name": "_audioHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "1219:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 816,
                        "name": "Song",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "1169:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Song_$745_storage_ptr_$",
                          "typeString": "type(struct ToknFactory.Song storage pointer)"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1169:61:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Song_$745_memory_ptr",
                        "typeString": "struct ToknFactory.Song memory"
                      }
                    },
                    "src": "1150:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Song_$745_storage",
                      "typeString": "struct ToknFactory.Song storage ref"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "1150:80:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1313:8:3",
                        "subExpression": {
                          "id": 827,
                          "name": "songID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "1313:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 829,
                        "name": "_title",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "1323:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1331:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1331:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 832,
                        "name": "_albumCoverHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "1343:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 833,
                        "name": "_audioHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "1360:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 826,
                      "name": "SongUploaded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "1300:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,address,string memory,string memory)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1300:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "EmitStatement",
                  "src": "1295:76:3"
                }
              ]
            },
            "functionSelector": "231f9f5e",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uploadSong",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "_albumCoverHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "730:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "_audioHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "761:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "_title",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "787:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "729:79:3"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:0:3"
            },
            "scope": 877,
            "src": "710:667:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "1509:277:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 847,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1522:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1522:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 849,
                              "name": "songList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "1536:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Song_$745_storage_$",
                                "typeString": "mapping(uint256 => struct ToknFactory.Song storage ref)"
                              }
                            },
                            "id": 851,
                            "indexExpression": {
                              "id": 850,
                              "name": "_songID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "1545:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1536:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Song_$745_storage",
                              "typeString": "struct ToknFactory.Song storage ref"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_artist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 740,
                          "src": "1536:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1522:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1514:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:48:3"
                },
                {
                  "assignments": [
                    857
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 857,
                      "mutability": "mutable",
                      "name": "newTokn",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "1567:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 856,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1567:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 867,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 863,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "1609:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 864,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "1615:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1593:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ToknBidding_$568_$",
                            "typeString": "function (string memory,string memory) returns (contract ToknBidding)"
                          },
                          "typeName": {
                            "id": 861,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 860,
                              "name": "ToknBidding",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 568,
                              "src": "1597:11:3"
                            },
                            "referencedDeclaration": 568,
                            "src": "1597:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ToknBidding_$568",
                              "typeString": "contract ToknBidding"
                            }
                          }
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1593:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ToknBidding_$568",
                          "typeString": "contract ToknBidding"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ToknBidding_$568",
                          "typeString": "contract ToknBidding"
                        }
                      ],
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1585:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 858,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1585:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1567:56:3"
                },
                {
                  "expression": {
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 868,
                        "name": "artistTokn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "1750:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 871,
                      "indexExpression": {
                        "expression": {
                          "id": 869,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1761:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1761:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1750:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 872,
                      "name": "newTokn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "1775:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1750:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:32:3"
                }
              ]
            },
            "functionSelector": "92a7dcd8",
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTokn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1444:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1464:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "_songID",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1486:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1443:59:3"
            },
            "returnParameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:3"
            },
            "scope": 877,
            "src": "1424:362:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 878,
        "src": "56:1735:3"
      }
    ],
    "src": "0:1791:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-21T12:20:54.876Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}